name: Build next.js docker container
run-name: build next.js docker container
on: 
  push:
    branches: ['dev']

env:
  SITE: site
  ECS_CLUSTER: fargate-next-site
  ECS_SRV: next-site-srv

jobs:
  build:
    runs-on: self-hosted
    steps:
      # - run: echo "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "branch name is ${{ github.ref }}"
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: setup node v20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: install next.js
        run: cd ${{ env.SITE }}; npm install next@latest react@latest react-dom@latest
      - name: install deps
        run: cd ${{ env.SITE }}; npm install
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-central-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: next-site
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd ${{ env.SITE }}; docker build -t $REGISTRY/$REPOSITORY .
          docker tag $REGISTRY/$REPOSITORY $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker tag $REGISTRY/$REPOSITORY $REGISTRY/$REPOSITORY:dev
          docker push $REGISTRY/$REPOSITORY:dev
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
      - name: Restart ECS service
        run: aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_SRV }} --force-new-deployment

      # - name: Log in to the Container registry
      #   uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      #   with:
      #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      # - name: Build and push Docker image
      #   id: push
      #   uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
      #   with:
      #     context: ./${{ env.SITE }}/
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
      # # - name: Generate artifact attestation
      #   uses: actions/attest-build-provenance@v1
      #   with:
      #     subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
      #     subject-digest: ${{ steps.push.outputs.digest }}
      #     push-to-registry: true
      # - name: build docker container
      #   run: cd site; docker build -t ${{ env.IMAGE_NAME }} .
      - run: echo "Job's status is ${{ job.status }}."

